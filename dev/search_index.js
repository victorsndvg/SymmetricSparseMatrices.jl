var documenterSearchIndex = {"docs":
[{"location":"#SymmetricSparseMatrices.jl-1","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.jl","text":"","category":"section"},{"location":"#","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.jl","text":"Documentation for SymmetricSparseMatrices.jl","category":"page"},{"location":"#Index-1","page":"SymmetricSparseMatrices.jl","title":"Index","text":"","category":"section"},{"location":"#","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.jl","text":"","category":"page"},{"location":"#Contents-1","page":"SymmetricSparseMatrices.jl","title":"Contents","text":"","category":"section"},{"location":"#","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.jl","text":"","category":"page"},{"location":"#Autodocs-1","page":"SymmetricSparseMatrices.jl","title":"Autodocs","text":"","category":"section"},{"location":"#","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.jl","text":"Modules = [SymmetricSparseMatrices]\nOrder   = [:module, :function, :type, :constant, :macro]","category":"page"},{"location":"#Base.:*-Union{Tuple{T}, Tuple{SymmetricSparseMatrix,Array{T,1}}} where T<:Real","page":"SymmetricSparseMatrices.jl","title":"Base.:*","text":"*(A::SymmetricSparseMatrix, v::Vector{T}) where {T<:Real}\n\nReturn the A*v product where A is SymmetricSparseMatrix{T,I} and v a Vector{T}.\n\n\n\n\n\n","category":"method"},{"location":"#Base.getindex-Union{Tuple{I}, Tuple{T}, Tuple{SymmetricSparseMatrix{T,I},Integer,Integer}} where I where T","page":"SymmetricSparseMatrices.jl","title":"Base.getindex","text":"getindex(A::SymmetricSparseMatrix{T}, x, y) where {T<:Real}\n\nReturn the (x, y) value of the SymmetricSparseMatrix.\n\n\n\n\n\n","category":"method"},{"location":"#Base.show-Tuple{IO,SymmetricSparseMatrix}","page":"SymmetricSparseMatrices.jl","title":"Base.show","text":"show(io::IO, A::SymmetricSparseMatrix)\n\nSymetriSparseMatrix show method implementation.\n\n\n\n\n\n","category":"method"},{"location":"#Base.size-Tuple{SymmetricSparseMatrix}","page":"SymmetricSparseMatrices.jl","title":"Base.size","text":"size(A::SymmetricSparseMatrix)\n\nReturns the size (#rows, #columns) of the SymmetricSparseMatrix.\n\n\n\n\n\n","category":"method"},{"location":"#SparseArrays.nnz-Tuple{SymmetricSparseMatrix}","page":"SymmetricSparseMatrices.jl","title":"SparseArrays.nnz","text":"nnz(A::SymmetricSparseMatrix)\n\nReturns the number of stored (filled) elements in a SymmetricSparseMatrix.\n\n\n\n\n\n","category":"method"},{"location":"#SymmetricSparseMatrices.symsparse-Union{Tuple{AbstractArray{Tv,2}}, Tuple{Tv}} where Tv","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.symsparse","text":"symsparse(A::AbstractMatrix{Tv}) where {Tv}\n\nConvert AbstractMatrix{Tv} to SymmetricSparseMatrix.\n\n\n\n\n\n","category":"method"},{"location":"#SymmetricSparseMatrices.symsparse-Union{Tuple{SparseMatrixCSC{T,Ti}}, Tuple{Ti}, Tuple{T}} where Ti where T","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.symsparse","text":"symsparse(S::SparseMatrixCSC{T,Ti}) where {T, Ti}\n\nConvert SparseMatrixCSC{T,Ti} to SymmetricSparseMatrix.\n\n\n\n\n\n","category":"method"},{"location":"#SymmetricSparseMatrices.SymmetricSparseMatrix","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.SymmetricSparseMatrix","text":"SymmetricSparseMatrix{T<:Real, I<:Integer}\n\nSymmetric Sparse matrix implementation. Extension from two-dimensional arrays (or array-like types) with elements of type T and I. Alias for AbstractArray{T,2}.\n\n\n\n\n\n","category":"type"},{"location":"#SymmetricSparseMatrices.SymmetricSparseMatrix-Tuple{Integer,Array{T,1} where T,Array{T,1} where T,Array{T,1} where T}","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.SymmetricSparseMatrix","text":"SymmetricSparseMatrix(m::Integer, n::Integer, rowptr::Vector, colval::Vector, nzval::Vector)\n\nSymetricSparseMatrix outter constructor method with full signature.\n\n\n\n\n\n","category":"method"},{"location":"#SymmetricSparseMatrices.SymmetricSparseMatrix-Tuple{}","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.SymmetricSparseMatrix","text":"SymmetricSparseMatrix()\n\nSymetricSparseMatrix outter constructor method to create empty .\n\n\n\n\n\n","category":"method"},{"location":"#SymmetricSparseMatrices.convertCOOrowstoCSR-Tuple{Any,Any,Any}","page":"SymmetricSparseMatrices.jl","title":"SymmetricSparseMatrices.convertCOOrowstoCSR","text":"convertCOOrowstoCSR(m, I)\n\nConvert ordered COO rows (I) to CSR rowptr given its number of rows.\n\n\n\n\n\n","category":"method"}]
}
